diff --git a/chrome/browser/browseros_server/BUILD.gn b/chrome/browser/browseros_server/BUILD.gn
new file mode 100644
index 0000000000000..ae59297ed238d
--- /dev/null
+++ b/chrome/browser/browseros_server/BUILD.gn
@@ -0,0 +1,107 @@
+# Copyright 2024 The Chromium Authors
+# Use of this source code is governed by a BSD-style license that can be
+# found in the LICENSE file.
+
+import("//build/config/chrome_build.gni")
+
+source_set("browseros_server") {
+  sources = [
+    "browseros_server_manager.cc",
+    "browseros_server_manager.h",
+    "browseros_server_prefs.cc",
+    "browseros_server_prefs.h",
+  ]
+
+  deps = [
+    "//base",
+    "//chrome/browser:browser_process",
+    "//chrome/common",
+    "//components/prefs",
+    "//content/public/browser",
+    "//net",
+  ]
+}
+
+# Determine OS name for binary selection
+if (is_mac) {
+  _browseros_os = "darwin"
+} else if (is_win) {
+  _browseros_os = "windows"
+} else if (is_linux) {
+  _browseros_os = "linux"
+}
+
+# Construct source binary filename based on target OS and architecture
+_browseros_binary_name = "browseros-server-${_browseros_os}-${target_cpu}"
+if (is_win) {
+  _browseros_binary_name += ".exe"
+}
+
+# Source binary path (architecture-specific)
+_browseros_source_binary = "binaries/${_browseros_binary_name}"
+
+# Output filename (standardized)
+_browseros_output_name = "browseros_server"
+if (is_win) {
+  _browseros_output_name += ".exe"
+}
+
+# CLI binary
+_browseros_cli_binary_name = "browseros-cli-${_browseros_os}-${target_cpu}"
+if (is_win) {
+  _browseros_cli_binary_name += ".exe"
+}
+
+_browseros_cli_source_binary = "binaries/${_browseros_cli_binary_name}"
+
+_browseros_cli_output_name = "browseros_cli"
+if (is_win) {
+  _browseros_cli_output_name += ".exe"
+}
+
+if (is_mac) {
+  import("//build/config/apple/symbols.gni")
+  import("//build/config/mac/mac_sdk.gni")
+
+  # Bundle data for macOS - packages to Resources/BrowserOSServer/default/
+  bundle_data("browseros_server_bundle_data") {
+    sources = [ _browseros_source_binary ]
+    outputs =
+        [ "{{bundle_resources_dir}}/BrowserOSServer/default/${_browseros_output_name}" ]
+  }
+} else {
+  # Copy for Windows/Linux - packages to <exe_dir>/BrowserOSServer/default/
+  copy("browseros_server_binary") {
+    sources = [ _browseros_source_binary ]
+    outputs = [ "$root_out_dir/BrowserOSServer/default/${_browseros_output_name}" ]
+  }
+}
+
+# CLI binary packaging
+if (is_mac) {
+  bundle_data("browseros_cli_bundle_data") {
+    sources = [ _browseros_cli_source_binary ]
+    outputs =
+        [ "{{bundle_resources_dir}}/BrowserOSServer/default/${_browseros_cli_output_name}" ]
+  }
+} else {
+  copy("browseros_cli_binary") {
+    sources = [ _browseros_cli_source_binary ]
+    outputs = [ "$root_out_dir/BrowserOSServer/default/${_browseros_cli_output_name}" ]
+  }
+}
+
+# Group for all BrowserOS server resources
+group("browseros_server_resources") {
+  if (is_mac) {
+    deps = [
+      ":browseros_server_bundle_data",
+      ":browseros_cli_bundle_data",
+    ]
+  } else {
+    deps = [
+      ":browseros_server_binary",
+      ":browseros_cli_binary",
+    ]
+  }
+}
